main
  start
    call init_putchar
    call putint 2w
    call putchar '\n'

    i = copy 3
    br loop

  loop
    is_prime = call is_odd_prime i
    br is_prime prime loop_end

  prime
    call putint i
    call putchar '\n'
    br loop_end

  loop_end
    i = add2 i 2
    c = ne2 i 65535
    br c loop finish

  finish
    ret
end


putint
  inputs n

  start
    c = lt2 n 10
    br c single_digit multi_digit

  single_digit
    t _ = split n
    ch = add1 t '0'
    call putchar ch
    ret

  multi_digit
    rest last = call div_rem n 10
    call putint rest
    call putint last
    ret
end


putchar
  inputs c

  start
    asm c 0
      inputs a x
      clobbers y p

      jsr 0xE456
    end
    ret
end


init_putchar
  start
    store1 0x0341 0x0B
    store2 0x0348 0
    ret
end


is_odd_prime
  inputs n

  start
    half = lsr2 n
    i = copy 3
    done = gt2 i half
    br done prime loop

  loop
    _ rem = call div_rem n i
    is_not_prime = eq2 rem 0
    br is_not_prime not_prime maybe_prime

  not_prime
    ret 0

  maybe_prime
    i = add2 i 2
    done = gt2 i half
    br done prime loop

  finish
    ret 1
end

div_rem
  inputs dividend divisor

  start
    done = lt2 dividend divisor
    quotient = copy 0
    remainder = copy dividend
    br done finish loop

  loop
    remainder = sub2 remainder divisor
    quotient = add2 quotient 1
    done = lt2 remainder divisor
    br done finish loop

  finish
    ret quotient remainder
end
